interface FiguraPlana {
    double calcularArea();
    double calcularPerimetro();
}

interface FiguraEspacial {
    double calcularVolume();
}

abstract class Figura {
    public abstract void exibirDetalhes();
}

class Circulo extends Figura implements FiguraPlana {
    private double raio;

    public Circulo(double raio) {
        this.raio = raio;
    }

    public double calcularArea() {
        return Math.PI * raio * raio;
    }

    public double calcularPerimetro() {
        return 2 * Math.PI * raio;
    }

    public void exibirDetalhes() {
        System.out.println("Círculo - Área: " + calcularArea() + ", Perímetro: " + calcularPerimetro());
    }
}

class Retangulo extends Figura implements FiguraPlana {
    private double largura;
    private double altura;

    public Retangulo(double largura, double altura) {
        this.largura = largura;
        this.altura = altura;
    }

    public double calcularArea() {
        return largura * altura;
    }

    public double calcularPerimetro() {
        return 2 * (largura + altura);
    }

    public void exibirDetalhes() {
        System.out.println("Retângulo - Área: " + calcularArea() + ", Perímetro: " + calcularPerimetro());
    }
}

class Triangulo extends Figura implements FiguraPlana {
    private double lado1, lado2, lado3;

    public Triangulo(double lado1, double lado2, double lado3) {
        this.lado1 = lado1;
        this.lado2 = lado2;
        this.lado3 = lado3;
    }

    public double calcularArea() {
        double s = (lado1 + lado2 + lado3) / 2;
        return Math.sqrt(s * (s - lado1) * (s - lado2) * (s - lado3));
    }

    public double calcularPerimetro() {
        return lado1 + lado2 + lado3;
    }

    public void exibirDetalhes() {
        System.out.println("Triângulo - Área: " + calcularArea() + ", Perímetro: " + calcularPerimetro());
    }
}

class Esfera extends Figura implements FiguraEspacial {
    private double raio;

    public Esfera(double raio) {
        this.raio = raio;
    }

    public double calcularVolume() {
        return (4.0 / 3.0) * Math.PI * Math.pow(raio, 3);
    }

    public void exibirDetalhes() {
        System.out.println("Esfera - Volume: " + calcularVolume());
    }
}

class Cubo extends Figura implements FiguraEspacial {
    private double lado;

    public Cubo(double lado) {
        this.lado = lado;
    }

    public double calcularVolume() {
        return Math.pow(lado, 3);
    }

    public void exibirDetalhes() {
        System.out.println("Cubo - Volume: " + calcularVolume());
    }
}

class Cone extends Figura implements FiguraEspacial {
    private double raio;
    private double altura;

    public Cone(double raio, double altura) {
        this.raio = raio;
        this.altura = altura;
    }

    public double calcularVolume() {
        return (1.0 / 3.0) * Math.PI * raio * raio * altura;
    }

    public void exibirDetalhes() {
        System.out.println("Cone - Volume: " + calcularVolume());
    }
}

public class SistemaFiguras {
    public static void main(String[] args) {
        Circulo circulo = new Circulo(5);
        Retangulo retangulo = new Retangulo(4, 6);
        Triangulo triangulo = new Triangulo(3, 4, 5);
        Esfera esfera = new Esfera(3);
        Cubo cubo = new Cubo(2);
        Cone cone = new Cone(2, 5);

        circulo.exibirDetalhes();
        retangulo.exibirDetalhes();
        triangulo.exibirDetalhes();
        esfera.exibirDetalhes();
        cubo.exibirDetalhes();
        cone.exibirDetalhes();
    }
}
